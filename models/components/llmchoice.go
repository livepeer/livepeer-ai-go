// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/livepeer/livepeer-ai-go/internal/utils"
)

type LLMChoice struct {
	Index        int64       `json:"index"`
	FinishReason *string     `default:"" json:"finish_reason"`
	Delta        *LLMMessage `json:"delta,omitempty"`
	Message      *LLMMessage `json:"message,omitempty"`
}

func (l LLMChoice) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *LLMChoice) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *LLMChoice) GetIndex() int64 {
	if o == nil {
		return 0
	}
	return o.Index
}

func (o *LLMChoice) GetFinishReason() *string {
	if o == nil {
		return nil
	}
	return o.FinishReason
}

func (o *LLMChoice) GetDelta() *LLMMessage {
	if o == nil {
		return nil
	}
	return o.Delta
}

func (o *LLMChoice) GetMessage() *LLMMessage {
	if o == nil {
		return nil
	}
	return o.Message
}
