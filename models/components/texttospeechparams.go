// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/livepeer/livepeer-ai-go/internal/utils"
)

type TextToSpeechParams struct {
	// Hugging Face model ID used for text to speech generation.
	ModelID *string `default:"" json:"model_id"`
	// Text input for speech generation.
	Text *string `default:"" json:"text"`
	// Description of speaker to steer text to speech generation.
	Description *string `default:"A male speaker delivers a slightly expressive and animated speech with a moderate speed and pitch." json:"description"`
}

func (t TextToSpeechParams) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TextToSpeechParams) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TextToSpeechParams) GetModelID() *string {
	if o == nil {
		return nil
	}
	return o.ModelID
}

func (o *TextToSpeechParams) GetText() *string {
	if o == nil {
		return nil
	}
	return o.Text
}

func (o *TextToSpeechParams) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}
