// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/livepeer/livepeer-ai-go/internal/utils"
)

// Params - Initial parameters for the model.
type Params struct {
}

type LiveVideoToVideoParams struct {
	// Source URL of the incoming stream to subscribe to.
	SubscribeURL string `json:"subscribe_url"`
	// Destination URL of the outgoing stream to publish.
	PublishURL string `json:"publish_url"`
	// Hugging Face model ID used for image generation.
	ModelID *string `default:"" json:"model_id"`
	// Initial parameters for the model.
	Params *Params `json:"params,omitempty"`
}

func (l LiveVideoToVideoParams) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *LiveVideoToVideoParams) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *LiveVideoToVideoParams) GetSubscribeURL() string {
	if o == nil {
		return ""
	}
	return o.SubscribeURL
}

func (o *LiveVideoToVideoParams) GetPublishURL() string {
	if o == nil {
		return ""
	}
	return o.PublishURL
}

func (o *LiveVideoToVideoParams) GetModelID() *string {
	if o == nil {
		return nil
	}
	return o.ModelID
}

func (o *LiveVideoToVideoParams) GetParams() *Params {
	if o == nil {
		return nil
	}
	return o.Params
}
